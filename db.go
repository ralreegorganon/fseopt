package fseopt

import (
	"encoding/xml"
	"io/ioutil"
	"net/http"
	"time"

	"github.com/jmoiron/sqlx"
	"github.com/lib/pq"
)

type DB struct {
	*sqlx.DB
	FSEUserKey string
}

func (db *DB) Open(connectionString string) error {
	d, err := sqlx.Open("postgres", connectionString)
	if err != nil {
		return err
	}
	db.DB = d
	return nil
}

func (db *DB) GetAssignments() ([]*Assignment, error) {
	assignments := []*Assignment{}
	err := db.Select(&assignments, `
		select 
			*
		from 
			assignment
	`)
	if err != nil {
		return nil, err
	}
	return assignments, nil
}

func (db *DB) UpdateAssignments() error {
	c := &http.Client{
		Timeout: time.Second * 60,
	}

	assignments := map[int64]Assignment{}

	urls := []string{
		"http://server.fseconomy.net/data?userkey=" + db.FSEUserKey + "&format=xml&query=icao&search=jobsto&icaos=01A-02AK-05AK-0AK-0AK0-0AK1-0AK2-0AK3-0AK6-0Z2-0Z3-10AK-11AK-11Z-13AK-13S-13Z-14AK-15AK-15Z-16A-16AK-16K-16Z-17Z-19AK-19P-1AK1-1AK2-1AK3-1AK4-1AK6-1AK7-1KC-1Z9-20K-21AK-22AK-23AK-24AK-25AK-28AK-29AK-2A3-2A4-2A9-2AK-2AK1-2AK2-2AK4-2AK5-2AK6-2AK7-2AK8-2AK9-2C7-2K5-2R3-2Y3-2Z1-2Z2-2Z3-2Z5-2Z6-30AK-31AK-32AK-33AK-34AK-36AK-36H-37AK-38A-38AK-39AK-3A3-3AK-3AK1-3AK2-3AK3-3AK4-3AK5-3AK6-3AK7-3AK8-3AK9-3H3-3Z1-3Z5-3Z8-3Z9-40AK-41AK-42AK-43AK-44AK-45AK-46AK-47AK-48AK-49AK-4A2-4AK-4AK2-4AK3-4AK5-4AK6-4AK7-4AK8-4AK9-4K0-4K5-4KA-4Z2-4Z5-4Z7-4Z9-51Z-52AK-52Z-53AK-54AK-55AK-56AK-57A-57AK-58A-58AK-59AK-5A8-5AK-5AK0-5AK2-5AK3-5AK5-5AK6-5AK8-5AK9-5BK-5BL-5CD-5HO-5KE-5KO-5KS-5L6-5NI-5NK-5NN-5QC-5S8-5Z1-5Z5-5Z7-5Z9-60Z-62AK-63A-63AK-64AK-65AK-68A-6A8-6AK-6AK1-6AK2-6AK3-6AK5-6AK7-6AK8-6AK9-6K8-6R7-6Z1-71AK-76Z-78K-78Z-7AK2-7AK3-7AK4-7AK5-7AK6-7AK8-7AK9-7K2-7KA-84K-87AK-88AK-89AK-8AK0-8AK2-8AK3-8AK4-8AK6-8AK7-8AK8-8AK9-8K9-8KA-93AK-94Z-95Z-96Z-99AK-99Z-9A3-9A8-9AK-9AK0-9AK2-9AK3-9AK4-9AK5-9AK6-9AK7-9AK8-9C0-9K2-9Z3-9Z7-9Z8-9Z9-A13-A14-A23-A27-A29-A43-A57-A61-A63-A67-A68-A69-A70-A77-A79-A85-A88-A89-AGN-AK0-AK00-AK02-AK03-AK06-AK07-AK08-AK09-AK1-AK11-AK12-AK13-AK15-AK17-AK18-AK21-AK22-AK23-AK24-AK25-AK26-AK27-AK28-AK31-AK32-AK34-AK39-AK40-AK41-AK44-AK45-AK46-AK49-AK5-AK50-AK53-AK56-AK60-AK62-AK64-AK65-AK71-AK72-AK73-AK76-AK80-AK81-AK83-AK90-AK92-AK95-AK96-AK97-AK98-AK99-AKI-AKK-ALZ-AQC-AQY-ATU-AUK-BGQ-BLG-BNF-BQV-BYA-C05-CDL-CEM-CGA-CHP-CIK-CJX-CKU-CKX-CLF-CLP-CSR-CXC-CXF-CYM-CZN-CZO-D66-DCK-DDT-EEK-ELI-ELV-EXI-FKK-FLT-FNR-FVM-GLV-GNU-GSZ-HAY-HCA-HED-HNE-HRR-HUS-HWI-HYG-HYL-IBN-IGG-IGT-IKO-IWK-JLA-JVM-JZZ-K29-K40-K54-K55-KAE-KAL-KBE-KCC-KCG-KCL-KCN-KCR-KDK-KEB-KEK-KFP-KGK-KGX-KGZ-KIB-KKB-KKI-KKL-KLG-KLL-KMY-KNW-KOT-KOY-KPB-KPC-KPH-KPR-KPY-KQA-KTB-KTS-KVC-KVL-KWF-KWK-KWP-KWT-KXA-KYU-L20-L85-LHD-LKK-LSR-MDR-MLL-MOS-MOU-MTF-MTM-MYK-N93-NIN-NUL-OBU-OOH-OOK-ORI-ORV-PAAK-PAAQ-PABA-PABE-PABI-PABL-PABR-PABT-PABV-PACD-PACK-PACL-PACR-PACS-PACV-PACY-PACZ-PADE-PADK-PADL-PADQ-PADU-PADY-PAEA-PAED-PAEH-PAEI-PAEM-PAEN-PAEW-PAFA-PAFB-PAFE-PAFL-PAFM-PAFR-PAFW-PAGA-PAGB-PAGK-PAGM-PAGS-PAGY-PAHN-PAHO-PAHP-PAHS-PAII-PAIK-PAIL-PAIN-PAJC-PAJN-PAKI-PAKK-PAKN-PAKP-PAKT-PAKW-PAKY-PALR-PALU-PAMC-PAMD-PAMH-PAML-PAMR-PAMY-PANC-PANI-PANN-PANT-PANV-PAOH-PAOM-PAOR-PAOT-PAPB-PAPG-PAPH-PAPM-PAPO-PAPR-PAQH-PAQT-PARC-PARD-PARY-PASA-PASC-PASD-PASH-PASI-PASK-PASL-PASM-PASN-PASO-PASP-PASV-PASW-PASX-PASY-PATA-PATC-PATG-PATJ-PATK-PATQ-PATW-PAUM-PAUN-PAUO-PAVD-PAWD-PAWG-PAWI-PAWN-PAWR-PAWS-PAXK-PAYA-PAZK-PCK-PEC-PFYU-PGM-PKA-PNP-POLI-PPIZ-PWR-PYL-RDV-RMP-RSH-SAG-SCM-SHG-SHX-SMK-SRV-SVS-SXP-T44-T66-TCT-TKE-TKL-TLJ-TLT-TPO-TSG-TYE-UBW-UGB-UMM-UTO-VAK-VEE-WBB-WBQ-WMO-WNA-WSB-WSJ-WSM-WSN-WWT-Z09-Z13-Z14-Z17-Z20-Z25-Z33-Z40-Z41-Z43-Z47-Z48-Z52-Z53-Z55-Z58-Z59-Z71-Z73-Z78-Z81-Z86-Z87-Z90-Z91-Z93-ZNC",
		"http://server.fseconomy.net/data?userkey=" + db.FSEUserKey + "&format=xml&query=icao&search=jobsfrom&icaos=01A-02AK-05AK-0AK-0AK0-0AK1-0AK2-0AK3-0AK6-0Z2-0Z3-10AK-11AK-11Z-13AK-13S-13Z-14AK-15AK-15Z-16A-16AK-16K-16Z-17Z-19AK-19P-1AK1-1AK2-1AK3-1AK4-1AK6-1AK7-1KC-1Z9-20K-21AK-22AK-23AK-24AK-25AK-28AK-29AK-2A3-2A4-2A9-2AK-2AK1-2AK2-2AK4-2AK5-2AK6-2AK7-2AK8-2AK9-2C7-2K5-2R3-2Y3-2Z1-2Z2-2Z3-2Z5-2Z6-30AK-31AK-32AK-33AK-34AK-36AK-36H-37AK-38A-38AK-39AK-3A3-3AK-3AK1-3AK2-3AK3-3AK4-3AK5-3AK6-3AK7-3AK8-3AK9-3H3-3Z1-3Z5-3Z8-3Z9-40AK-41AK-42AK-43AK-44AK-45AK-46AK-47AK-48AK-49AK-4A2-4AK-4AK2-4AK3-4AK5-4AK6-4AK7-4AK8-4AK9-4K0-4K5-4KA-4Z2-4Z5-4Z7-4Z9-51Z-52AK-52Z-53AK-54AK-55AK-56AK-57A-57AK-58A-58AK-59AK-5A8-5AK-5AK0-5AK2-5AK3-5AK5-5AK6-5AK8-5AK9-5BK-5BL-5CD-5HO-5KE-5KO-5KS-5L6-5NI-5NK-5NN-5QC-5S8-5Z1-5Z5-5Z7-5Z9-60Z-62AK-63A-63AK-64AK-65AK-68A-6A8-6AK-6AK1-6AK2-6AK3-6AK5-6AK7-6AK8-6AK9-6K8-6R7-6Z1-71AK-76Z-78K-78Z-7AK2-7AK3-7AK4-7AK5-7AK6-7AK8-7AK9-7K2-7KA-84K-87AK-88AK-89AK-8AK0-8AK2-8AK3-8AK4-8AK6-8AK7-8AK8-8AK9-8K9-8KA-93AK-94Z-95Z-96Z-99AK-99Z-9A3-9A8-9AK-9AK0-9AK2-9AK3-9AK4-9AK5-9AK6-9AK7-9AK8-9C0-9K2-9Z3-9Z7-9Z8-9Z9-A13-A14-A23-A27-A29-A43-A57-A61-A63-A67-A68-A69-A70-A77-A79-A85-A88-A89-AGN-AK0-AK00-AK02-AK03-AK06-AK07-AK08-AK09-AK1-AK11-AK12-AK13-AK15-AK17-AK18-AK21-AK22-AK23-AK24-AK25-AK26-AK27-AK28-AK31-AK32-AK34-AK39-AK40-AK41-AK44-AK45-AK46-AK49-AK5-AK50-AK53-AK56-AK60-AK62-AK64-AK65-AK71-AK72-AK73-AK76-AK80-AK81-AK83-AK90-AK92-AK95-AK96-AK97-AK98-AK99-AKI-AKK-ALZ-AQC-AQY-ATU-AUK-BGQ-BLG-BNF-BQV-BYA-C05-CDL-CEM-CGA-CHP-CIK-CJX-CKU-CKX-CLF-CLP-CSR-CXC-CXF-CYM-CZN-CZO-D66-DCK-DDT-EEK-ELI-ELV-EXI-FKK-FLT-FNR-FVM-GLV-GNU-GSZ-HAY-HCA-HED-HNE-HRR-HUS-HWI-HYG-HYL-IBN-IGG-IGT-IKO-IWK-JLA-JVM-JZZ-K29-K40-K54-K55-KAE-KAL-KBE-KCC-KCG-KCL-KCN-KCR-KDK-KEB-KEK-KFP-KGK-KGX-KGZ-KIB-KKB-KKI-KKL-KLG-KLL-KMY-KNW-KOT-KOY-KPB-KPC-KPH-KPR-KPY-KQA-KTB-KTS-KVC-KVL-KWF-KWK-KWP-KWT-KXA-KYU-L20-L85-LHD-LKK-LSR-MDR-MLL-MOS-MOU-MTF-MTM-MYK-N93-NIN-NUL-OBU-OOH-OOK-ORI-ORV-PAAK-PAAQ-PABA-PABE-PABI-PABL-PABR-PABT-PABV-PACD-PACK-PACL-PACR-PACS-PACV-PACY-PACZ-PADE-PADK-PADL-PADQ-PADU-PADY-PAEA-PAED-PAEH-PAEI-PAEM-PAEN-PAEW-PAFA-PAFB-PAFE-PAFL-PAFM-PAFR-PAFW-PAGA-PAGB-PAGK-PAGM-PAGS-PAGY-PAHN-PAHO-PAHP-PAHS-PAII-PAIK-PAIL-PAIN-PAJC-PAJN-PAKI-PAKK-PAKN-PAKP-PAKT-PAKW-PAKY-PALR-PALU-PAMC-PAMD-PAMH-PAML-PAMR-PAMY-PANC-PANI-PANN-PANT-PANV-PAOH-PAOM-PAOR-PAOT-PAPB-PAPG-PAPH-PAPM-PAPO-PAPR-PAQH-PAQT-PARC-PARD-PARY-PASA-PASC-PASD-PASH-PASI-PASK-PASL-PASM-PASN-PASO-PASP-PASV-PASW-PASX-PASY-PATA-PATC-PATG-PATJ-PATK-PATQ-PATW-PAUM-PAUN-PAUO-PAVD-PAWD-PAWG-PAWI-PAWN-PAWR-PAWS-PAXK-PAYA-PAZK-PCK-PEC-PFYU-PGM-PKA-PNP-POLI-PPIZ-PWR-PYL-RDV-RMP-RSH-SAG-SCM-SHG-SHX-SMK-SRV-SVS-SXP-T44-T66-TCT-TKE-TKL-TLJ-TLT-TPO-TSG-TYE-UBW-UGB-UMM-UTO-VAK-VEE-WBB-WBQ-WMO-WNA-WSB-WSJ-WSM-WSN-WWT-Z09-Z13-Z14-Z17-Z20-Z25-Z33-Z40-Z41-Z43-Z47-Z48-Z52-Z53-Z55-Z58-Z59-Z71-Z73-Z78-Z81-Z86-Z87-Z90-Z91-Z93-ZNC",
	}

	for _, url := range urls {
		resp, err := c.Get(url)
		if err != nil {
			return err
		}
		defer resp.Body.Close()
		body, err := ioutil.ReadAll(resp.Body)
		if err != nil {
			return err
		}

		var to JobContainer
		err = xml.Unmarshal(body, &to)
		if err != nil {
			return err
		}

		for _, a := range to.Assignments {
			assignments[a.ID] = a
		}
	}

	txn, err := db.Begin()
	if err != nil {
		return err
	}

	_, err = txn.Exec("delete from assignment")
	if err != nil {
		txn.Rollback()
		return err
	}

	stmt, err := txn.Prepare(pq.CopyIn("assignment", "id", "to_icao", "from_icao", "amount", "unit_type", "pay", "type"))
	if err != nil {
		txn.Rollback()
		return err
	}

	for _, a := range assignments {
		_, err = stmt.Exec(a.ID, a.ToIcao, a.FromIcao, a.Amount, a.UnitType, a.Pay, a.Type)
		if err != nil {
			txn.Rollback()
			return err
		}
	}

	_, err = stmt.Exec()
	if err != nil {
		txn.Rollback()
		return err
	}

	err = stmt.Close()
	if err != nil {
		txn.Rollback()
		return err
	}

	err = txn.Commit()
	if err != nil {
		txn.Rollback()
		return err
	}

	return nil
}
